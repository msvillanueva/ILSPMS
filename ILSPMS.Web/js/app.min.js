(function(){"use strict";angular.module("common.core",["ngRoute","ngCookies","base64","angularFileUpload","angularValidator","angucomplete-alt"])})(),function(){"use strict";angular.module("common.ui",["ui.bootstrap","chieffancypants.loadingBar","ngAnimate","cambria","smart-table","ngclipboard","ngMaterial","chart.js"])}(),function(n){"use strict";function t(n,t,i,r,u){function e(t,r,u,e){return n.get(t,r).then(function(n){u(n)},function(n){n.status=="401"?(i.displayError("Authentication required."),f()):e!=null&&e(n)})}function o(t,r,u,e){return n.get(t,{ignoreLoadingBar:!0}).then(function(n){u(n)},function(n){n.status=="401"?(i.displayError("Authentication required."),f()):e!=null&&e(n)})}function s(t,r,u,e){return n.post(t,r).then(function(n){u(n)},function(n){n.status=="401"?(i.displayError("Authentication required."),f()):e!=null&&e(n)})}function h(t,r,u,e){return n.post(t,r,{ignoreLoadingBar:!0}).then(function(n){u(n)},function(n){n.status=="401"?(i.displayError("Authentication required."),f()):e!=null&&e(n)})}function f(){r.previousState=t.path();membershipService.removeCredentials();u(function(){window.location.href="login.html"},3e3)}return{get:e,post:s,silentGet:o,silentPost:h}}n.factory("apiService",t);t.$inject=["$http","$location","notificationService","$rootScope","$interval"]}(angular.module("common.core")),function(n){"use strict";function t(n,t,i,r,u){function f(t,i,f){for(var o,e=0;e<t.length;e++)o=t[e],function(t){n.upload[t]=r.upload({url:"api/files/upload?id="+i,method:"POST",file:o}).progress(function(){}).success(function(){u.displaySuccess("Your attachment file has been uploaded successfully");f&&f()}).error(function(n){u.displayError(n.Message)})}(e)}n.upload=[];return{uploadFile:f}}n.factory("fileUploadService",t);t.$inject=["$rootScope","$http","$timeout","$upload","notificationService"]}(angular.module("common.core")),function(n){"use strict";function t(n,t,i,r,u,f){function e(n,t){i.post("/api/account/authenticate",n).success(function(n){t(n)})}function o(n,t,e){var o=r.encode(n.username+":"+n.password);f.repository={loggedUser:{username:n.username,authdata:o,role:t,id:e,impersonating:{},isImpersonated:!1}};i.defaults.headers.common.Authorization="Basic "+o;u.put("ilsPMSrepo",f.repository)}function s(){f.repository={};u.remove("ilsPMSrepo");i.defaults.headers.common.Authorization="";i.defaults.headers.common.Roles=""}function h(){return f.repository!=null&&f.repository.loggedUser!=null}function c(n){return r.encode(n)}return{login:e,saveCredentials:o,removeCredentials:s,isUserLoggedIn:h,encStr:c}}n.factory("membershipService",t);t.$inject=["apiService","notificationService","$http","$base64","$cookieStore","$rootScope"]}(angular.module("common.core")),function(n){"use strict";function t(){function t(n){toastr.success(n)}function n(n){Array.isArray(n)?n.forEach(function(n){toastr.error(n)}):toastr.error(n)}function i(n){toastr.warning(n)}function r(n){toastr.info(n)}function u(t){n(t.data)}toastr.options={debug:!1,positionClass:"toast-bottom-left",onclick:null,fadeIn:300,fadeOut:1e3,timeOut:7e3,extendedTimeOut:300,closeButton:!0,newestOnTop:!1,progressBar:!0,preventDuplicates:!1,showEasing:"swing",hideEasing:"linear"};return{displaySuccess:t,displayError:n,displayWarning:i,displayInfo:r,responseFailed:u}}n.factory("notificationService",t)}(angular.module("common.core")),function(){"use strict";function i(i){i.when("/",{title:"Dashboard",templateUrl:"js/app/dashboard/dashboard.html",controller:"dashboardCtrl",menu:"#menuDashboard"}).when("/profile",{title:"Profile",templateUrl:"js/app/profile/profile.html",controller:"profileCtrl",menu:"#menuDashboard"}).when("/change-password",{title:"Change password",templateUrl:"js/app/profile/password.html",controller:"passwordCtrl",menu:"#menuDashboard"}).when("/users",{title:"Users Management",templateUrl:"js/app/user/users.html",controller:"usersCtrl",menu:"#menuUsers",resolve:{allowed:n}}).when("/divisions",{title:"Divisions Management",templateUrl:"js/app/division/divisions.html",controller:"divisionsCtrl",menu:"#menuDivisions",resolve:{allowed:n}}).when("/projects",{title:"Projects Management",templateUrl:"js/app/project/projects.html",controller:"projectsCtrl",menu:"#menuProjects",resolve:{allowed:n}}).when("/my-projects",{title:"My Projects",templateUrl:"js/app/myproject/myProjects.html",controller:"myProjectsCtrl",menu:"#menuMyProjects",resolve:{allowed:t}}).when("/my-approvals",{title:"Projects for Approval",templateUrl:"js/app/myproject/myProjects.html",controller:"myApprovalsCtrl",menu:"#menuMyApprovals",resolve:{allowed:f}}).when("/project-movements/:id",{title:"My Projects",templateUrl:"js/app/movement/movements.html",controller:"movementsCtrl",menu:"#menuMyProjects",resolve:{allowed:t}}).when("/project-activities/:id",{title:"My Projects",templateUrl:"js/app/activity/activities.html",controller:"activitiesCtrl",menu:"#menuMyProjects",resolve:{allowed:t}}).otherwise({redirectTo:"/"})}function r(n,t,i,r,u,f){n.repository=i.get("ilsPMSrepo")||{};u.isUserLoggedIn()||(window.location.href="login.html");n.repository.loggedUser&&(r.defaults.headers.common.Authorization=n.repository.loggedUser.authdata,r.defaults.headers.common.Roles=n.repository.loggedUser.role);n.$on("$routeChangeSuccess",function(){var t,i,n;document.title="PLMS | "+f.current.title;t=document.getElementsByClassName("sub-logo")[0];t&&(document.getElementsByClassName("sub-logo")[0].innerHTML=" | "+f.current.title);i=document.getElementsByClassName("menu-item");angular.forEach(i,function(n){angular.element(n).removeClass("active")});n=angular.element(document.querySelector(f.current.menu));n&&n.context&&n.context.nodeName=="LI"&&n.addClass("active")});$(document).ready(function(){$(".fancybox").fancybox({openEffect:"none",closeEffect:"none"});$(".fancybox-media").fancybox({openEffect:"none",closeEffect:"none",helpers:{media:{}}});$("[data-toggle=offcanvas]").click(function(){$(".row-offcanvas").toggleClass("active")})})}function u(n,t,i){n.isUserLoggedIn()||(t.previousState=i.path(),window.location.href="/")}angular.module("ilsApp",["common.core","common.ui"]).config(i).run(r);i.$inject=["$routeProvider","$locationProvider"];r.$inject=["$rootScope","$location","$cookieStore","$http","membershipService","$route"];u.$inject=["membershipService","$rootScope","$location"];var n=["membershipService","$rootScope","$location","$q",function(n,t,i,r){var u=r.defer();if(t.repository.loggedUser.role!=1)return u.promise}],t=["membershipService","$rootScope","$location","$q",function(n,t,i,r){var u=r.defer();if(t.repository.loggedUser.role==1)return u.promise}],f=["membershipService","$rootScope","$location","$q",function(n,t,i,r){var u=r.defer();if(t.repository.loggedUser.role==1||t.repository.loggedUser.role==2)return u.promise}]}(),function(n){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"js/app/_layout/addButton.html",scope:{label:"@",create:"&"}}}n.directive("addButton",t)}(angular.module("ilsApp")),function(n){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"js/app/_layout/searchBar.html"}}n.directive("searchBar",t)}(angular.module("ilsApp")),function(n){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"js/app/_layout/sideBar.html"}}n.directive("sideBar",t)}(angular.module("ilsApp")),function(n){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"/js/app/_layout/topBar.html"}}n.directive("topBar",t)}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r){function f(){n.userData.isUserLoggedIn=i.isUserLoggedIn();n.userData.isUserLoggedIn?(n.username=r.repository.loggedUser.username,n.role=r.repository.loggedUser.role,n.userData.id=r.repository.loggedUser.id,n.isAdmin=r.repository.loggedUser.role==1,n.isPM=r.repository.loggedUser.role==2,n.isDiv=r.repository.loggedUser.role==3,n.isDirector=r.repository.loggedUser.role==4||r.repository.loggedUser.role==5):u()}function u(){i.removeCredentials();window.location.href="login.html"}function e(n){return new Date(n)}function o(n){isNaN(String.fromCharCode(n.keyCode))&&n.preventDefault()}function s(n){var t=document.getElementsByClassName("sub-logo")[0];t&&(document.getElementsByClassName("sub-logo")[0].innerHTML=" | "+n)}n.userData={};n.UserEntity={};n.Alerts=[];n.itemsByPage=10;n.role=0;n.username="";n.isAdmin=!1;n.isPM=!1;n.isDiv=!1;n.isDirector=!1;n.year=(new Date).getFullYear();n.displayUserInfo=f;n.logout=u;n.formatDate=e;n.filterValue=o;n.setTitle=s;n.displayUserInfo()}n.controller("rootCtrl",t);t.$inject=["$scope","$location","membershipService","$rootScope","apiService","$interval","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i){function r(){n.isAdmin?u():e()}function u(){n.loadingData=!0;t.get("/api/admindashboard/",null,f,i.responseFailed)}function f(t){n.loadingData=!1;n.projects=t.data.projects;n.allProjects=t.data.allProjects;n.users=t.data.users;n.cmLabels=t.data.movementsData.Labels;n.cmData=[t.data.movementsData.Items];n.cmOptions={scales:{yAxes:[{ticks:{min:0,maxTicksLimit:6}}]}}}function e(){n.loadingData=!0;t.get("/api/dashboard/",null,o,i.responseFailed)}function o(t){n.loadingData=!1;console.log(t);n.approvals=t.data.approval;n.projects=t.data.projects;n.closedProjectData=t.data.closeProject;n.movements=t.data.movements;n.totalMovements=t.data.totalMovements;n.totalActivities=t.data.totalActivities;(n.isPM||n.isDiv)&&s();n.cdLabels=t.data.closeProject.Labels;n.cdData=t.data.closeProject.Items}function s(){angular.forEach(n.projects,function(t){t.LockSubmit||t.ProjectManagerID!=n.userData.id||n.forSubmit++})}n.projects=[];n.closedProjectData={};n.approvals=0;n.forSubmit=0;n.movements=[];n.totalMovements=0;n.totalActivities=0;n.cdColors=["#84ffff","#ff8a80"];n.cdLabels=[];n.cdData=[];n.cdOptions={legend:{display:!0}};r()}n.controller("dashboardCtrl",t);t.$inject=["$scope","apiService","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.filter="";e()}function e(){n.loadingData=!0;var t={params:{filter:n.filter}};i.get("/api/users/",t,o,r.responseFailed)}function o(t){n.loadingData=!1;n.filter&&n.filter.length&&r.displayInfo(t.data.items.length+(t.data.items.length>1?" records found":" record found"));n.tableRowCollection=t.data.items;n.users=[].concat(n.tableRowCollection)}function s(t,f){u.cConfirm("Archive this user account?","CONFIRM ACTION",function(u){u&&(n.users.splice(t,1),i.post("/api/users/remove/",f,function(n){n.data.success?r.displaySuccess(f.FullName+" was removed from the list."):r.displayError(n.data.message)},r.responseFailed))})}function h(n,t){n.IsLocked=t;i.post("/api/users/lockunlock/",n,function(i){i.data.success?r.displaySuccess(n.FullName+"'s account is now "+(t?"locked.":"unlocked.")):r.displayError(i.data.message)},r.responseFailed)}function c(i){n.viewModel=i?angular.copy(i):{ID:0,RoleID:n.roles[1].ID};t.open({templateUrl:"js/app/user/userViewModal.html",controller:"userViewModalCtrl",scope:n,backdrop:"static",keyboard:!1}).result.then(function(){f()},function(){})}function l(){i.get("/api/divisions/",null,function(t){n.divisions=t.data.items},r.responseFailed);i.get("/api/roles/",null,function(t){n.roles=t.data.items},r.responseFailed);n.search()}n.pageClass="page-users";n.loadingData=!0;n.page=0;n.pagesCount=0;n.users=[];n.tableRowCollection=[];n.roles=[];n.divisions=[];n.search=e;n.clearSearch=f;n.archive=s;n.toggleLock=h;n.create=c;l()}n.controller("usersCtrl",t);t.$inject=["$scope","$uibModal","apiService","notificationService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){var t="";t=n.viewModel.ID>0?"/api/users/edit/":"/api/users/new/";n.dataLoading=!0;r.post(t,n.viewModel,e,u.responseFailed)}function e(i){n.dataLoading=!1;i.data.success?(n.viewModel.ID==0?(u.displaySuccess("New user has been added successfully."),n.tableRowCollection.push(angular.copy(i.data.item)),n.users=[].concat(n.tableRowCollection),n.viewModel={}):(u.displaySuccess("User account has been updated successfully."),o(i.data.item)),t.dismiss()):u.displayError(i.data.message)}function o(t){angular.forEach(n.users,function(i){i.ID==n.viewModel.ID&&(i.FirstName=t.FirstName,i.LastName=t.LastName,i.FullName=t.FullName,i.Email=t.Email,i.DivisionName=t.DivisionName,i.RoleName=t.RoleName,i.RoleID=t.RoleID,i.DivisionID=t.DivisionID)});n.viewModel={}}function s(){n.isEnabled=!1;t.dismiss()}n.close=s;n.save=f}n.controller("userViewModalCtrl",t);t.$inject=["$scope","$uibModalInstance","$timeout","apiService","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.filter="";e()}function e(){n.loadingData=!0;i.get("/api/divisions/",null,o,r.responseFailed)}function o(t){n.loadingData=!1;n.filter&&n.filter.length&&r.displayInfo(t.data.items.length+(t.data.items.length>1?" records found":" record found"));n.tableRowCollection=t.data.items;n.divisions=[].concat(n.tableRowCollection)}function s(t,f){u.cConfirm("Archive this division?","CONFIRM ACTION",function(u){u&&(n.divisions.splice(t,1),i.post("/api/divisions/remove/",f,function(n){n.data.success?r.displaySuccess(f.Name+" was removed from the list."):r.displayError(n.data.message)},r.responseFailed))})}function h(i){n.viewModel=i?angular.copy(i):{ID:0};t.open({templateUrl:"js/app/division/divisionViewModal.html",controller:"divisionViewModalCtrl",scope:n,backdrop:"static",keyboard:!1}).result.then(function(){f()},function(){})}n.pageClass="page-divisions";n.loadingData=!0;n.page=0;n.pagesCount=0;n.divisions=[];n.tableRowCollection=[];n.search=e;n.clearSearch=f;n.archive=s;n.create=h;n.search()}n.controller("divisionsCtrl",t);t.$inject=["$scope","$uibModal","apiService","notificationService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.dataLoading=!0;r.post("/api/divisions/update/",n.viewModel,e,u.responseFailed)}function e(i){n.dataLoading=!1;i.data.success?(n.viewModel.ID==0?(u.displaySuccess("New division has been added successfully."),n.divisions.push(angular.copy(i.data.item))):(u.displaySuccess("Division has been updated successfully."),o()),t.dismiss()):u.displayError(i.data.message)}function o(){angular.forEach(n.divisions,function(t){t.ID==n.viewModel.ID&&(t.Name=n.viewModel.Name)})}function s(){n.isEnabled=!1;t.dismiss()}n.close=s;n.save=f}n.controller("divisionViewModalCtrl",t);t.$inject=["$scope","$uibModalInstance","$timeout","apiService","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.filter="";e()}function e(){n.loadingData=!0;var t={params:{filter:n.filter,divisionID:n.divisionID,year:n.selectedYear}};i.get("/api/projects/",t,o,r.responseFailed)}function o(t){n.loadingData=!1;n.filter&&n.filter.length&&r.displayInfo(t.data.items.length+(t.data.items.length>1?" records found":" record found"));n.tableRowCollection=t.data.items;n.projects=[].concat(n.tableRowCollection)}function s(t,f){u.cConfirm("Archive this project?","CONFIRM ACTION",function(u){u&&(n.projects.splice(t,1),i.post("/api/projects/remove/",f,function(n){n.data.success?r.displaySuccess(f.Name+" was removed from the list."):r.displayError(n.data.message)},r.responseFailed))})}function h(i){n.viewModel=i?angular.copy(i):{ID:0};t.open({templateUrl:"js/app/project/projectViewModal.html",controller:"projectViewModalCtrl",scope:n,backdrop:"static",keyboard:!1}).result.then(function(){f()},function(){})}function c(){i.get("/api/divisions/",null,function(t){n.divisions=t.data.items},r.responseFailed);i.get("/api/users/pms",null,function(t){n.pms=t.data.items},r.responseFailed);i.post("/api/projects/years",null,function(t){n.years=t.data.items},r.responseFailed);n.search()}n.pageClass="page-projects";n.loadingData=!0;n.page=0;n.pagesCount=0;n.projects=[];n.tableRowCollection=[];n.pms=[];n.divisions=[];n.divisionID="0";n.years=[];n.selectedYear=n.year.toString();n.search=e;n.clearSearch=f;n.archive=s;n.create=h;c()}n.controller("projectsCtrl",t);t.$inject=["$scope","$uibModal","apiService","notificationService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.dataLoading=!0;r.post("/api/projects/update/",n.viewModel,e,u.responseFailed)}function e(i){n.dataLoading=!1;i.data.success?(n.viewModel.ID==0?(u.displaySuccess("New project has been added successfully."),n.tableRowCollection.push(angular.copy(i.data.item)),n.projects=[].concat(n.tableRowCollection),n.viewModel={}):(u.displaySuccess("Project has been updated successfully."),o(i.data.item)),t.dismiss()):u.displayError(i.data.message)}function o(t){angular.forEach(n.projects,function(i){i.ID==n.viewModel.ID&&(i.Name=t.Name,i.DivisionName=t.DivisionName,i.ProjectManager=t.ProjectManager,i.Budget=t.Budget,i.Year=t.Year)});n.viewModel={}}function s(){n.isEnabled=!1;t.dismiss()}n.close=s;n.save=f}n.controller("projectViewModalCtrl",t);t.$inject=["$scope","$uibModalInstance","$timeout","apiService","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function e(){n.filter="";f()}function f(){n.loadingData=!0;var t={params:{filter:n.filter,forApproval:n.forApproval}};i.get("/api/projects/",t,o,r.responseFailed)}function o(t){n.loadingData=!1;n.filter&&n.filter.length&&r.displayInfo(t.data.items.length+(t.data.items.length>1?" records found":" record found"));n.topMilestone=t.data.ms;n.projects=t.data.items}function s(t){u.cConfirm("Are you sure you want to commit project<br/><b>"+t.Name+"<\/b>?","CONFIRM ACTION",function(u){u&&i.post("/api/projects/submit/",t,function(t){t.data.success?n.search():r.displayError(t.data.message)},r.responseFailed)})}function h(t){u.cConfirm("Are you sure you want to approve project<br/><b>"+t.Name+"<\/b>?","CONFIRM ACTION",function(u){u&&i.post("/api/projects/approve/",t,function(t){t.data.success?n.search():r.displayError(t.data.message)},r.responseFailed)})}function c(t){u.cConfirm("Are you sure you want to decline the request for approval for project<br/><b>"+t.Name+"<\/b>?","CONFIRM ACTION",function(u){u&&i.post("/api/projects/decline/",t,function(t){t.data.success?n.search():r.displayError(t.data.message)},r.responseFailed)})}function l(n,t){t.Hovered=!0}function a(n,t){t.Hovered=!1}n.pageClass="page-myprojects";n.loadingData=!0;n.projects=[];n.tableRowCollection=[];n.topMilestone=0;n.forApproval=!0;n.viewby=6;n.currentPage=1;n.itemsPerPage=n.viewby;n.maxSize=5;n.search=f;n.clearSearch=e;n.popMenu=l;n.hideMenu=a;n.submit=s;n.approve=h;n.decline=c;n.search()}n.controller("myApprovalsCtrl",t);t.$inject=["$scope","$uibModal","apiService","notificationService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function e(){n.filter="";f()}function f(){n.loadingData=!0;var t={params:{filter:n.filter,year:n.selectedYear,forApproval:n.forApproval,divisionID:n.divisionID}};i.get("/api/projects/",t,o,r.responseFailed)}function o(t){n.loadingData=!1;n.filter&&n.filter.length&&r.displayInfo(t.data.items.length+(t.data.items.length>1?" records found":" record found"));n.topMilestone=t.data.ms;n.projects=t.data.items}function s(t){u.cConfirm("Are you sure you want to commit project<br/><b>"+t.Name+"<\/b>?","CONFIRM ACTION",function(u){u&&i.post("/api/projects/submit/",t,function(t){t.data.success?n.search():r.displayError(t.data.message)},r.responseFailed)})}function h(t){u.cConfirm("Are you sure you want to approve project<br/><b>"+t.Name+"<\/b>?","CONFIRM ACTION",function(u){u&&i.post("/api/projects/approve/",t,function(t){t.data.success?n.search():r.displayError(t.data.message)},r.responseFailed)})}function c(n,t){t.Hovered=!0}function l(n,t){t.Hovered=!1}function a(){n.isDirector&&i.get("/api/divisions/",null,function(t){n.divisions=t.data.items},r.responseFailed);i.post("/api/projects/years",null,function(t){n.years=t.data.items},r.responseFailed);n.search()}n.pageClass="page-myprojects";n.loadingData=!0;n.projects=[];n.tableRowCollection=[];n.topMilestone=0;n.forApproval=!1;n.divisions=[];n.divisionID="0";n.years=[];n.selectedYear=n.year.toString();n.viewby=6;n.currentPage=1;n.itemsPerPage=n.viewby;n.maxSize=5;n.search=f;n.clearSearch=e;n.popMenu=c;n.hideMenu=l;n.submit=s;n.approve=h;a()}n.controller("myProjectsCtrl",t);t.$inject=["$scope","$uibModal","apiService","notificationService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.dataLoading=!0;var u={};u.Current=r.encStr(n.viewModel.Current);u.New=r.encStr(n.viewModel.New);u.Confirm=r.encStr(n.viewModel.Confirm);t.post("/api/account/changepassword/",u,e,i.responseFailed)}function e(t){n.dataLoading=!1;t.data.success?u.cAlert("Password was updated. <br/> You will be redirected to the login screen","PASSWORD UPDATED",function(){r.removeCredentials();window.location.href="login.html"}):i.displayError(t.data.message)}n.pageClass="page-password";n.dataLoading=!1;n.viewModel={};n.save=f}n.controller("passwordCtrl",t);t.$inject=["$scope","apiService","notificationService","membershipService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r){function u(){n.dataLoading=!0;i.post("/api/account/update/",n.viewModel,f,r.responseFailed)}function f(t){n.dataLoading=!1;t.data.success?r.displaySuccess("Your profile has been updated successfully"):r.displayError(t.data.message)}function e(){i.get("/api/account",null,function(t){n.dataLoading=!1;n.viewModel=t.data.item;n.availableUsername=n.viewModel.Username!=""},r.responseFailed)}n.close=close;n.save=u;e()}n.controller("profileCtrl",t);t.$inject=["$scope","$timeout","apiService","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r){function u(){var n={params:{id:r.id}};t.get("/api/movements",n,f,i.responseFailed)}function f(t){t.data.success?(n.dataLoading=!1,n.milestones=t.data.items,n.showMovements(n.milestones[t.data.items.length-1]),n.setTitle(t.data.title+" | Movements")):i.displayError(t.data.message)}function e(t){var i,r;n.tableRowCollection=t.Movements;n.movements=[].concat(n.tableRowCollection);i=angular.element(document.querySelectorAll(".milestone-card"));i.removeClass("selected");r=angular.element(document.querySelector("#card"+t.MilestoneID));r.addClass("selected")}n.pageClass="page-users";n.dataLoading=!0;n.page=0;n.pagesCount=0;n.milestones=[];n.movements=[];n.tableRowCollection=[];n.showMovements=e;u()}n.controller("movementsCtrl",t);t.$inject=["$scope","apiService","notificationService","$routeParams"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u,f){function e(){var n={params:{id:r.id}};t.get("/api/activities",n,o,i.responseFailed)}function o(t){t.data.success?(n.dataLoading=!1,n.milestones=t.data.items,n.showActivities(n.milestones[t.data.items.length-1]),n.lastMilestoneID=n.milestones[t.data.items.length-1].MilestoneID,n.setTitle(t.data.project.Name+" | Activities"),n.canAdd=!0,n.IsSubmitted=t.data.project.LockSubmit):i.displayError(t.data.message)}function s(t){var i,r;n.tableRowCollection=t.Activities;n.activities=[].concat(n.tableRowCollection);i=angular.element(document.querySelectorAll(".milestone-card"));i.removeClass("selected");r=angular.element(document.querySelector("#card"+t.MilestoneID));r.addClass("selected");n.canAdd=n.lastMilestoneID==t.MilestoneID}function h(t){n.viewModel=t?angular.copy(t):{ID:0,BudgetUtilized:0,MilestoneID:n.lastMilestoneID,ProjectID:r.id};u.open({templateUrl:"js/app/activity/activityViewModal.html",controller:"activityViewModalCtrl",scope:n,backdrop:"static",keyboard:!1}).result.then(function(){clearSearch()},function(){})}function c(t){n.activity=angular.copy(t);u.open({templateUrl:"js/app/activity/uploadModal.html",controller:"uploadModalCtrl",scope:n,backdrop:"static",keyboard:!1}).result.then(function(){clearSearch()},function(){})}function l(t){n.activity=angular.copy(t);u.open({templateUrl:"js/app/activity/filesModal.html",controller:"filesModalCtrl",scope:n,backdrop:"static",keyboard:!1}).result.then(function(){clearSearch()},function(){})}function a(r,u){f.cConfirm("Remove this activity?","CONFIRM ACTION",function(f){f&&(n.activities.splice(r,1),t.post("/api/activities/remove/",u,function(n){n.data.success?i.displaySuccess(u.Activity+" was removed from the list."):i.displayError(n.data.message)},i.responseFailed))})}n.dataLoading=!0;n.page=0;n.pagesCount=0;n.milestones=[];n.activities=[];n.tableRowCollection=[];n.lastMilestoneID=0;n.canAdd=!1;n.IsSubmitted=!1;n.showActivities=s;n.init=e;n.create=h;n.archive=a;n.upload=c;n.files=l;n.init()}n.controller("activitiesCtrl",t);t.$inject=["$scope","apiService","notificationService","$routeParams","$uibModal","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u){function f(){n.dataLoading=!0;r.post("/api/activities/update/",n.viewModel,e,u.responseFailed)}function e(i){n.dataLoading=!1;i.data.success?(n.viewModel.ID==0?u.displaySuccess("New activity has been added successfully."):u.displaySuccess("Activity has been updated successfully."),n.init(),t.dismiss()):u.displayError(i.data.message)}function o(){n.isEnabled=!1;t.dismiss()}n.close=o;n.save=f}n.controller("activityViewModalCtrl",t);t.$inject=["$scope","$uibModalInstance","$timeout","apiService","notificationService"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u,f){function e(){n.tableRowCollection=n.activity.Files;n.files=[].concat(n.tableRowCollection)}function o(){n.isEnabled=!1;t.dismiss()}function s(t,i){f.cConfirm("Are you sure you want to remove this file<br/> <strong>permanently<\/strong> from the server?","CONFIRM ACTION",function(f){f&&(n.files.splice(t,1),r.post("/api/files/remove/",i,function(n){n.data.success?u.displaySuccess(i.Name+" was permanently removed from the server"):u.displayError(n.data.message)},u.responseFailed))})}n.page=0;n.pagesCount=0;n.tableRowCollection=[];n.files=[];n.close=o;n.archiveFile=s;e()}n.controller("filesModalCtrl",t);t.$inject=["$scope","$uibModalInstance","$timeout","apiService","notificationService","cambria"]}(angular.module("ilsApp")),function(n){"use strict";function t(n,t,i,r,u,f){function o(){e?(n.viewModel.ProjectActivityID=n.activity.ID,n.dataLoading=!0,r.post("/api/files/save/",n.viewModel,s,u.responseFailed)):u.displayError("File attachment is required")}function s(i){n.dataLoading=!1;i.data.success?(f.uploadFile(e,i.data.id,function(){n.init()}),e=null,n.viewModel={},t.dismiss()):u.displayError(i.data.message)}function h(){n.isEnabled=!1;t.dismiss()}function c(n){e=n}n.close=h;n.save=o;n.prepareFiles=c;var e=null}n.controller("uploadModalCtrl",t);t.$inject=["$scope","$uibModalInstance","$timeout","apiService","notificationService","fileUploadService"]}(angular.module("ilsApp"));